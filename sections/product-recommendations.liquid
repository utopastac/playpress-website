{{ 'product-recommendations.css' | asset_url | stylesheet_tag }}

<aside
  is="product-recommendations"
  data-js="product-recommendations"
  data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4"
>
  {%- if recommendations.performed and recommendations.products_count > 0 -%}
      <div is="product-promos">

        {% comment %} <span class="three-d-badge">
          <img 
            src="{{ '3d-adventure.png' | asset_url }}"
            alt="3D adventure building sytem"
            loading="lazy"
            width="600"
            height="400"
          />
        </span> {% endcomment %}

        <div class="four">
          {%- for product in recommendations.products -%}
              {% render 'product-promo', product: product %}
          {%- endfor -%}
        </div>
      </div>
  {%- endif -%}
</aside>

{% javascript %}
  const handleIntersection = (entries, observer) => {
    if (!entries[0].isIntersecting) return;

    observer.unobserve(productRecommendationsSection);

    const url = productRecommendationsSection.dataset.url;

    fetch(url)
      .then(response => response.text())
      .then(text => {
        const html = document.createElement('div');
        html.innerHTML = text;
        const recommendations = html.querySelector('[data-js*="product-recommendations"]');

        if (recommendations && recommendations.innerHTML.trim().length) {
          productRecommendationsSection.innerHTML = recommendations.innerHTML;
        }
      })
      .catch(e => {
        console.error(e);
      });
  };

  const productRecommendationsSection = document.querySelector('[data-js*="product-recommendations"]');
  const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});

  observer.observe(productRecommendationsSection);
{% endjavascript %}

{% schema %}
  {
    "name": "Product recommendations",
    "settings": []
  }
{% endschema %}
